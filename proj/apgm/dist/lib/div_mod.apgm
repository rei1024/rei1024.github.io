
/*
function divMod(x, y) {
    let d = 0;
    if (x < y) {
        return [d, x]
    } else {
        x = x - y;
        d++;
    }
}
function divMod(x, y) {
    let d = 0;
    let temp = x + y;
    if (x < y) {
        return [d, x]
    } else {
        x = x - y;
        temp = temp - y;
        d++;
    }
}
*/

macro div_mod_by_constant!(x, constant, div, mod, temp0, temp1) {
    copy_u!(x, temp0, temp1);
    copy_u!(x, mod, temp1);
    repeat(constant, tdec_u(temp0));
    loop {
        if_z (tdec_u(temp0)) {

            /* if mod = constant then bug */
            copy_u!(mod, temp0, temp1);
            inc_u(temp0);
            repeat(constant, tdec_u(temp0));
            if_nz(tdec_u(temp0)) {
                inc_u(div);
                zero_u!(mod);
                zero_u!(temp0);
            }
            break();
        } else {
            inc_u(temp0);
            repeat(constant, tdec_u(temp0));
            repeat(constant, tdec_u(mod));

            inc_u(div);
        }
    }
}
