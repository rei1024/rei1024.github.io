h1 {
    margin-bottom: 2px;
}

.font-x-large {
    font-size: x-large;
}

.white-space-pre-wrap {
    white-space: pre-wrap;
}

.input-border {
    border: 1px solid black;
}

.mono {
    font-family: var(--bs-font-monospace);
    font-size: 0.875em;
}

main {
    padding-inline: 8px;
}

.main_content {
    display: flex;
    flex-direction: row;
    justify-content: center;
}

#apgm_input {
    width: 55%;
    height: calc(100vh - 120px);
    resize: both;
}

#output {
    width: 45%;
    font-size: 12px;
}

@media screen and (max-width: 768px) {
    .main_content {
        flex-direction: column;
    }

    #apgm_input {
        height: 400px;
    }

    #apgm_input, #output {
        width: 100%;
    }

    #buttons {
        display: grid;
        gap: 4px 0px;
        grid-template-columns: repeat(3, 1fr);
    }
}

/**** speedy animation ****/
.fade {
    transition: opacity 0.1s linear; /* 0.15s */
}

.modal.fade .modal-dialog {
    transition: transform 0.2s ease-out; /* 0.3s */
}

/**** Dark mode ****/
:root {
    --dark-mode-color: #dddddd;
    --dark-mode-background-color: #111111;
}

body[apge_dark="on"],
body[apge_dark="on"]
    :is(
        h1,
        /* header for info */
        td,
        th,
        /* generic */
        .btn-primary,
        textarea.form-control,
        textarea.form-control:focus,
        .binary_info,
        /* modal */
        .modal-content,
        input[type="number"],
        input[type="number"]:focus,
        .form-select,
        .form-select:focus,
        .dropdown-item,
        .dropdown-menu
    ) {
    background-color: var(--dark-mode-background-color);
    color: var(--dark-mode-color);
}

/* 閉じるボタンを白くする */
body[apge_dark="on"] .btn-close {
    background-color: var(--dark-mode-color);
}
